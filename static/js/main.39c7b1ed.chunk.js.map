{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","totalConfirmed","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","ev","target","countryName","i","key","App","state","fetchedData","setState","this","image","src","alt","Chart","style","marginTop","Link","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39c7b1ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","import React from 'react';\nimport { Card, Typography, CardContent, Grid } from '@material-ui/core';\nimport styles from './Cards.module.css'\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nconst Cards = ({ data: { confirmed, deaths, recovered, lastUpdate } }) => {\n    if (!confirmed) {\n        return 'Loading...';\n    }\n\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp  start={0} end={confirmed.value} duration={2} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of COVID-19 cases</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp  start={0} end={recovered.value} duration={2} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp  start={0} end={deaths.value} duration={2} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n\n    if (country) {\n        changeableUrl = `${url}/countries/${country}`;\n    }\n    \n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);     \n        \n        return  { confirmed, recovered, deaths, lastUpdate };\n    } catch (error) {\n        return(error);\n    }\n};\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n        \n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.totalConfirmed,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }));\n\n        return modifiedData;\n    } catch (error) {\n        return error;\n    }\n};\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: { countries } } = await axios.get(`${url}/countries`);\n    \n        return countries.map((country) => country.name);\n    } catch (error) {\n        return(error);        \n    }  \n};\n","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Charts = ({ data: { confirmed, recovered, deaths}, country }) => {  \n    const [ dailyData, setDailyData ] = useState([]);\n    \n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        } \n        \n        fetchAPI();\n    }, []);\n    \n    \n    const lineChart = (\n        dailyData.length \n            ? (\n                <Line \n                data={{\n                    labels: dailyData.map(({ date }) => date),\n                    datasets: [{\n                        data: dailyData.map(({ confirmed }) => confirmed),\n                        label: 'Infected',\n                        borderColor: '#3333ff',\n                        fill: true,\n                    }, {\n                        data: dailyData.map(({ deaths }) => deaths),\n                        label: 'Deaths',\n                        borderColor: 'red',\n                        backgroundColor: 'rgba(255 , 0, 0, .5)',\n                        fill: true,\n                    }]\n                }}\n            />\n            ) : null\n    );\n\n    const barChart = (\n        confirmed\n        ? (\n            <Bar \n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: [\n                            'rgba(0, 0, 255 , .5)',\n                            'rgba(0, 255, 0, .5)',\n                            'rgba(255, 0, 0, .5)'\n                        ],\n                        data: [confirmed.value, recovered.value, deaths.value]\n                    }]\n                }}\n                options = {{\n                    legend: { display: false },\n                    title: { display: true, text: `Current state in ${country}`}\n                }}\n            />\n        ) : null\n    );\n\n    return (\n        \n        <div className={styles.container}>\n            {country ? barChart: lineChart}\n        </div>\n    );\n};\n\nexport default Charts;","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl} from '@material-ui/core';\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n    }, [setFetchedCountries]);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(ev) => handleCountryChange(ev.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((countryName, i) => <option key={i} value={countryName}>{countryName}</option> )}\n            </NativeSelect>\n        </FormControl>\n    );\n};\n\nexport default CountryPicker;\n","import React from 'react';\nimport { Cards, Charts, CountryPicker } from './components';\nimport { fetchData } from './api';\nimport { Typography, Link } from '@material-ui/core';\n\nimport styles from './App.module.css';\n\nimport image from './images/image.png';\n\nclass App extends React.Component {\n    \n    state = {\n        data: {},\n        country: ''\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n\n        this.setState({\n            data: fetchedData\n        });\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        \n        this.setState({\n            data: fetchedData,\n            country: country \n        });\n    };\n    \n    render() {\n        const {\n            data,\n            country \n        } = this.state;\n\n        return (\n            <div className={styles.container}>\n                <img className={styles.image} src={image} alt=\"COVID-19\" />\n                <Cards data={data} />\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Charts data={data} country={country} />\n                <Typography style={{marginTop: '20px'}}>Data has been fetched from <Link href=\"https://covid19.mathdro.id/api\" target=\"_blank\">this API</Link></Typography> \n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};"],"sourceRoot":""}